// Prisma schema (initial minimal)

generator client {
  provider = "prisma-client-js"
  output   = "../dist"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PreferredNameType {
  spiritual
  worldly
  custom
}

model User {
  id           String  @id @default(cuid())
  email        String  @unique
  // Authentication
  passwordHash String?

  // Profile fields
  spiritualName     String?
  worldlyName       String?
  preferredName     String?
  preferredNameType PreferredNameType @default(spiritual)
  displayName       String?
  telegram          String?
  whatsapp          String?
  photoKey          String?
  dateOfBirth       DateTime?
  nationality       String?
  languages         String?
  location          String?
  preferredLanguage String?

  // Primary Unit (single membership)
  unitId String?
  unit   Unit?   @relation(fields: [unitId], references: [id])

  // Mentor relation
  mentorId String?
  mentor   User?   @relation("Mentorship", fields: [mentorId], references: [id])
  mentees  User[]  @relation("Mentorship")

  // Acarya relation
  acaryaId  String?
  acarya    User?   @relation("Acarya", fields: [acaryaId], references: [id])
  initiates User[]  @relation("Acarya")

  // Lessons relation
  lessons UserLesson[]
}

model UserLesson {
  id         String    @id @default(cuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  lesson     Int // 0 = nama mantra, 1-6 = lessons 1-6
  receivedAt DateTime?

  @@unique([userId, lesson])
}

model Unit {
  id                     String    @id @default(cuid())
  name                   String    @unique
  description            String?
  unofficialRegisteredAt DateTime?
  officialRegisteredAt   DateTime?
  users                  User[]
}
